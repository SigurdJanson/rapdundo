@page "/counter"

@using Fleximand.Core

@implements IDisposable

@inject IFleximandService Undo
@inject ISnackbar Snackbar



<MudText Typo="Typo.h5">Counter</MudText>

<MudText>Current count: @currentCount</MudText>

<MudButton StartIcon="@Icons.Material.Filled.PlusOne" Variant=Variant.Filled Color="Color.Primary" Command=FmdCount>Add 1</MudButton>

<MudButton StartIcon="@Icons.Material.Filled.AddAlert" Variant=Variant.Outlined Color="Color.Primary" OnClick=AddSnackbar>Show snackbar</MudButton>


@code {
    public int currentCount { get; set; } = 0;

    public PropertySetterFleximand<Counter, int> FmdCount;

    protected override void OnInitialized()
    {
        FmdCount = new(this, nameof(currentCount), currentCount + 1);
        Undo.Register(FmdCount);

        Undo.NotifyPageOnCommand += (object o, EventArgs a) => StateHasChanged();

        base.OnInitialized();
    }

    void IDisposable.Dispose()
    {
        Undo.NotifyPageOnCommand -= (object o, EventArgs a) => StateHasChanged();
    }



    public void AddSnackbar()
    {
        Snackbar.Add("Snackbar will close after navigation.", Severity.Normal, (options) =>
        {
            options.CloseAfterNavigation = true;
        });
    }
}

